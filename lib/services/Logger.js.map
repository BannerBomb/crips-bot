{"version":3,"sources":["services/Logger.js"],"names":[],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;AAEA,kBAAI,aAAJ,CAAkB,CAAC,OAAD,EAAU,OAAV,EAAmB,MAAnB,EAA2B,OAA3B,EAAoC,MAApC,EAA4C,QAA5C,EAAsD,MAAtD,EAA8D,OAA9D,CAAlB;AACA,kBAAI,SAAJ,CAAc,MAAd,EAAsB,EAAE,MAAM,eAAK,IAAL,CAAU,QAAQ,GAAR,EAAV,EAAyB,MAAzB,EAAiC,wBAAS,MAAT,CAAgB,iBAAhB,IAAqC,OAAtE,CAAR,EAAtB,EACC,aADD,CACe,iBADf;;IAGM,M;AACJ,kBAAa,IAAb,EAAmB,EAAnB,EAAuB,MAAvB,EAA+B;AAAA;;AAC7B,SAAK,IAAL,GAAY,IAAZ;AACA,SAAK,EAAL,GAAU,MAAM,SAAhB;AACA,SAAK,MAAL,GAAc,UAAU,OAAxB;AACD;;;;wBAEI,I,EAAM;AACT,cAAQ,GAAR,CAAe,gBAAM,KAAK,EAAX,EAAe,KAAK,MAApB,QAAgC,KAAK,IAArC,OAAf,SAAgE,IAAhE;AACA,wBAAI,MAAJ,CAAW,IAAX;AACD;;;yBAEK,I,EAAM;AACV,cAAQ,GAAR,CAAe,gBAAM,QAAN,CAAe,KAAf,CAAqB,QAArB,CAAf,SAAiD,IAAjD;AACA,wBAAI,IAAJ,CAAS,IAAT;AACD;;;0BAEM,I,EAAM;AACX,cAAQ,KAAR,CAAiB,gBAAM,KAAN,CAAY,KAAZ,CAAkB,OAAlB,CAAjB,SAA+C,IAA/C;AACA,wBAAI,KAAJ,CAAU,IAAV;AACD;;;0BAEM,I,EAAM;AACX,cAAQ,GAAR,CAAe,gBAAM,OAAN,CAAc,KAAd,CAAoB,SAApB,CAAf,SAAiD,IAAjD;AACA,wBAAI,KAAJ,CAAU,IAAV;AACD;;;yBAEK,I,EAAM;AACV,cAAQ,GAAR,CAAe,gBAAM,OAAN,CAAc,KAAd,CAAoB,QAApB,CAAf,SAAgD,IAAhD;AACA,wBAAI,IAAJ,CAAS,IAAT;AACD;;;0BAEM,G,EAAK;AACV,UAAI,QAAO,GAAP,yCAAO,GAAP,OAAe,QAAnB,EAA6B;AAC3B,gBAAQ,GAAR,CAAe,gBAAM,KAAN,CAAY,MAAZ,CAAmB,OAAnB,CAAf,SAA8C,gBAAM,IAAN,CAAW,OAAX,CAAmB,IAAI,OAAJ,CAAY,SAAZ,GAAwB,UAAxB,GAAqC,IAAI,MAAJ,CAAW,IAAnE,CAA9C,WAA4H,gBAAM,IAAN,CAAW,KAAX,CAAiB,IAAI,MAAJ,CAAW,IAA5B,CAA5H,UAAkK,gBAAM,IAAN,CAAW,IAAX,CAAgB,IAAI,YAAJ,CAAiB,OAAjB,CAAyB,KAAzB,EAAgC,GAAhC,CAAhB,CAAlK;AACA,0BAAI,IAAJ,EAAY,IAAI,OAAJ,CAAY,SAAZ,GAAwB,KAAxB,GAAgC,IAAI,MAAJ,CAAW,IAAvD,YAAiE,IAAI,MAAJ,CAAW,IAA5E,UAAqF,IAAI,YAAJ,CAAiB,OAAjB,CAAyB,KAAzB,EAAgC,GAAhC,CAArF;AACD;AACF;;;;;;AAGH,OAAO,OAAP,GAAiB,MAAjB","file":"services/Logger.js","sourcesContent":["import path from 'path'\nimport moment from 'moment'\nimport log from 'bristol'\nimport chalk from 'chalk'\n\nlog.setSeverities(['panic', 'alert', 'crit', 'error', 'warn', 'notice', 'info', 'debug'])\nlog.addTarget('file', { file: path.join(process.cwd(), 'logs', moment().format('YYYY-MM-DD HHmm') + '.json') })\n.withFormatter('commonInfoModel')\n\nclass Logger {\n  constructor (name, bg, colour) {\n    this.name = name\n    this.bg = bg || 'bgWhite'\n    this.colour = colour || 'black'\n  }\n\n  log (text) {\n    console.log(`${chalk[this.bg][this.colour](` ${this.name} `)} ${text}`)\n    log.notice(text)\n  }\n\n  warn (text) {\n    console.log(`${chalk.bgYellow.black(' WARN ')} ${text}`)\n    log.warn(text)\n  }\n\n  error (text) {\n    console.error(`${chalk.bgRed.black(' ERR ')} ${text}`)\n    log.error(text)\n  }\n\n  debug (text) {\n    console.log(`${chalk.bgWhite.black(' DEBUG ')} ${text}`)\n    log.debug(text)\n  }\n\n  info (text) {\n    console.log(`${chalk.bgGreen.black(' INFO ')} ${text}`)\n    log.info(text)\n  }\n\n  heard (msg) {\n    if (typeof msg === 'object') {\n      console.log(`${chalk.black.bgCyan(' MSG ')} ${chalk.bold.magenta(msg.channel.isPrivate ? '(in PMs)' : msg.server.name)} > ${chalk.bold.green(msg.author.name)}: ${chalk.bold.blue(msg.cleanContent.replace(/\\n/g, ' '))}`)\n      log.info(`${msg.channel.isPrivate ? 'DMs' : msg.server.name} > ${msg.author.name}: ${msg.cleanContent.replace(/\\n/g, ' ')}`)\n    }\n  }\n}\n\nmodule.exports = Logger\n"],"sourceRoot":"/Users/AaronTua/Desktop/code/iris/src"}