{"version":3,"sources":["plugins/Core/help.js"],"names":[],"mappings":"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","file":"plugins/Core/help.js","sourcesContent":["import path from 'path'\nimport fs from 'fs'\nimport BaseCommand from '../.Base/BaseCommand'\n\nclass Help extends BaseCommand {\n  get name () {\n    return 'help'\n  }\n\n  get description () {\n    return 'Displays a list of commands. Provide a command to get its info'\n  }\n\n  get usage () {\n    return '[command]'\n  }\n\n  get aliases () {\n    return ['commands']\n  }\n\n  handle (args) {\n    if (args[0]) {\n      let answered = false\n      for (let mod in this.bot.plugins) {\n        for (let command in this.bot.plugins[mod]) {\n          command = this.bot.plugins[mod][command]\n          if (command.hidden === true) continue\n          if (command.name === args[0]) {\n            if (typeof command.gif === 'string') {\n              const imgPath = path.join(this.bot.dbPath, 'gif', command.gif)\n              fs.access(imgPath, fs.F_OK, err => {\n                if (err) {\n                  this.bot.error(`Gif not found: ${imgPath}`)\n                  return\n                }\n                this.client.sendFile(this.message, imgPath, command.gif, [\n                  `**${this.bot.config.prefix}${command.name}** ${command.usage ? `\\`${command.usage}\\`` : ''}`,\n                  command.description,\n                  command.cooldown ? `**Cooldown**: ${command.cooldown} seconds` : ''\n                ])\n                answered = true\n              })\n            } else {\n              this.reply([\n                `**${this.bot.config.prefix}${command.name}** ${command.usage ? `\\`${command.usage}\\`` : ''}`,\n                command.description,\n                command.cooldown ? `**Cooldown**: ${command.cooldown} seconds` : ''\n              ].join('\\n'))\n              answered = true\n            }\n          }\n        }\n      }\n      if (answered === false) {\n        this.client.sendMessage(this.message, `Command \\`${args[0]}\\` not found. Aliases aren't allowed.`)\n      }\n    } else {\n      let arr = [\n        '__**Commands List**__\\n',\n        '*Don\\'t include the example brackets when using commands!*\\n',\n        `Use \\`${this.bot.config.prefix}help <command name>\\` to get more info on a specific command.`,\n        `For example: \\`${this.bot.config.prefix}help rank\\`\\n`\n      ]\n\n      for (let mod in this.bot.plugins) {\n        if (Object.keys(this.bot.plugins[mod]) === 0) continue\n        let reply = [`**${mod} - **`]\n        for (let command in this.bot.plugins[mod]) {\n          command = this.bot.plugins[mod][command]\n          if (command.hidden === true) continue\n          reply.push(`\\`${command.name}\\` `)\n        }\n        arr.push(reply.join(''))\n      }\n\n      this.reply(arr.join('\\n'))\n    }\n  }\n}\n\nmodule.exports = Help\n"],"sourceRoot":"/Users/AaronTua/Desktop/code/iris/src"}