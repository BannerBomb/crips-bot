{"version":3,"sources":["plugins/.Base/BaseCommand.js"],"names":[],"mappings":"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","file":"plugins/.Base/BaseCommand.js","sourcesContent":["const Tatsumaki = require('../../')\n\nclass BaseCommand {\n  constructor () {\n    if (this.constructor === BaseCommand) {\n      throw new Error('Can\\'t instantiate abstract command!')\n    }\n    this.bot = Tatsumaki\n    this.logger = Tatsumaki.logger\n    this.bot.on(this.name, (args, msg, client) => {\n      if (msg.channel.isPrivate && this.noPMs === true) {\n        this.send(msg, 'You can\\'t use this command in a DM!')\n        return\n      }\n      this.message = msg\n      this.client = client\n      this.handle(args)\n    })\n    this.aliases.forEach(a => this.bot.on(a, (s, m, c) => this.handle(s, m, c)))\n  }\n\n  get name () {\n    throw new Error('Names must be overwritten')\n  }\n\n  get description () {\n    throw new Error('Description must be overwritten')\n  }\n\n  get aliases () {\n    return []\n  }\n\n  get usage () {\n    return ''\n  }\n\n  get cooldown () {\n    return 0\n  }\n\n  get permissions () {\n    return []\n  }\n\n  get hidden () {\n    return false\n  }\n\n  get gif () {\n    return null\n  }\n\n  get noPMs () {\n    return false\n  }\n\n  handle (args) {}\n\n  send (dest, content, options = {delay: 0, deleteDelay: 0}) {\n    let {delay, deleteDelay} = options\n    if (content.length > 20000) {\n      this.logger.error(\n        'Error sending a message larger than the character and rate limit\\n' +\n        content\n      )\n      return\n    }\n\n    if (delay) {\n      return setTimeout(() => {\n        this.client.sendMessage(dest, content, {delay: 0, deleteDelay})\n      }, delay)\n    }\n\n    let msgRem = ''\n    if (content.length > 2000) {\n      content = content.match(/.{1,20000}/g)\n      msgRem = content.shift()\n      content = content.join('')\n    }\n\n    return new Promise((res, rej) => {\n      this.client.sendMessage(dest, content)\n      .then(msg => {\n        if (deleteDelay) {\n          this.client.sendMessage(msg, {wait: deleteDelay})\n          .then(() => {\n            if (!msgRem) res(msg)\n          })\n          .catch(err => rej(err))\n\n          if (!msgRem) return\n        }\n\n        if (msgRem) {\n          return this.send(dest, msgRem, options)\n            .then(msg => {\n              return res(Array.isArray(msg) ? msg.concat(msg) : [msg])\n            })\n            .catch(rej)\n        }\n\n        res(msg)\n      })\n      .catch(err => rej(err))\n    })\n  }\n\n  reply (content, options = {delay: 0, deleteDelay: 0}) {\n    return new Promise((res, rej) => {\n      this.send(this.message, content, options).then(res).catch(rej)\n    })\n  }\n}\n\nmodule.exports = BaseCommand\n"],"sourceRoot":"/Users/AaronTua/Desktop/code/iris/src"}