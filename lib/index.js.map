{"version":3,"sources":["index.js"],"names":[],"mappings":";;AAAA;;;;AACA;;;;AAEA;;;;AACA;;;;;;AAEA,IAAM,SAAS,sBAAf;;AAEA,IAAI,kBAAQ,QAAZ,EAAsB;AACpB,SAAO,KAAP,CAAa,QAAb;AACA,OAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,aAAG,IAAH,GAAU,MAA9B,EAAsC,GAAtC,EAA2C;AACzC,sBAAQ,IAAR,CAAa,EAAE,SAAS,CAAX,EAAc,YAAY,aAAG,IAAH,GAAU,MAApC,EAAb;AACD;AACF,CALD,MAKO;AACL,SAAO,KAAP,aAAuB,QAAQ,GAAR,CAAY,OAAnC;AACA,MAAI,YAAY,kBAAQ;AACtB,aAAS,QAAQ,GAAR,CAAY,OADC;AAEtB,gBAAY,QAAQ,GAAR,CAAY;AAFF,GAAR,CAAhB;AAIA,YAAU,GAAV;;AAEA,SAAO,OAAP,GAAiB,SAAjB;AACD","file":"index.js","sourcesContent":["import os from 'os'\nimport cluster from 'cluster'\n\nimport Bot from './services/Bot'\nimport Logger from './services/Logger'\n\nconst logger = new Logger()\n\nif (cluster.isMaster) {\n  logger.debug('MASTER')\n  for (let i = 0; i < os.cpus().length; i++) {\n    cluster.fork({ shardID: i, shardCount: os.cpus().length })\n  }\n} else {\n  logger.debug(`WORKER ${process.env.shardID}`)\n  let Tatsumaki = new Bot({\n    shardID: process.env.shardID,\n    shardCount: process.env.shardCount\n  })\n  Tatsumaki.run()\n\n  module.exports = Tatsumaki\n}\n"],"sourceRoot":"/Users/AaronTua/Desktop/code/iris/src"}